{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\r\n\r\ntype SendMessage = (msg: any) => void\r\nexport type WebSocketMessage =\r\n  | {\r\n      type: 'turbopack-connected'\r\n    }\r\n  | {\r\n      type: 'turbopack-message'\r\n      data: Record<string, any>\r\n    }\r\n\r\nexport type ClientOptions = {\r\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void\r\n  sendMessage: SendMessage\r\n  onUpdateError: (err: unknown) => void\r\n}\r\n\r\nexport function connect({\r\n  addMessageListener,\r\n  sendMessage,\r\n  onUpdateError = console.error,\r\n}: ClientOptions) {\r\n  addMessageListener((msg) => {\r\n    switch (msg.type) {\r\n      case 'turbopack-connected':\r\n        handleSocketConnected(sendMessage)\r\n        break\r\n      default:\r\n        try {\r\n          if (Array.isArray(msg.data)) {\r\n            for (let i = 0; i < msg.data.length; i++) {\r\n              handleSocketMessage(msg.data[i] as ServerMessage)\r\n            }\r\n          } else {\r\n            handleSocketMessage(msg.data as ServerMessage)\r\n          }\r\n          applyAggregatedUpdates()\r\n        } catch (e: unknown) {\r\n          console.warn(\r\n            '[Fast Refresh] performing full reload\\n\\n' +\r\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\r\n              'You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n' +\r\n              'Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n' +\r\n              'It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n' +\r\n              'Fast Refresh requires at least one parent function component in your React tree.'\r\n          )\r\n          onUpdateError(e)\r\n          location.reload()\r\n        }\r\n        break\r\n    }\r\n  })\r\n\r\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS\r\n  if (queued != null && !Array.isArray(queued)) {\r\n    throw new Error('A separate HMR handler was already registered')\r\n  }\r\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\r\n    push: ([chunkPath, callback]: [ChunkListPath, UpdateCallback]) => {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\r\n    },\r\n  }\r\n\r\n  if (Array.isArray(queued)) {\r\n    for (const [chunkPath, callback] of queued) {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\r\n    }\r\n  }\r\n}\r\n\r\ntype UpdateCallbackSet = {\r\n  callbacks: Set<UpdateCallback>\r\n  unsubscribe: () => void\r\n}\r\n\r\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map()\r\n\r\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\r\n  sendMessage(JSON.stringify(message))\r\n}\r\n\r\ntype ResourceKey = string\r\n\r\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\r\n  return JSON.stringify({\r\n    path: resource.path,\r\n    headers: resource.headers || null,\r\n  })\r\n}\r\n\r\nfunction subscribeToUpdates(\r\n  sendMessage: SendMessage,\r\n  resource: ResourceIdentifier\r\n): () => void {\r\n  sendJSON(sendMessage, {\r\n    type: 'turbopack-subscribe',\r\n    ...resource,\r\n  })\r\n\r\n  return () => {\r\n    sendJSON(sendMessage, {\r\n      type: 'turbopack-unsubscribe',\r\n      ...resource,\r\n    })\r\n  }\r\n}\r\n\r\nfunction handleSocketConnected(sendMessage: SendMessage) {\r\n  for (const key of updateCallbackSets.keys()) {\r\n    subscribeToUpdates(sendMessage, JSON.parse(key))\r\n  }\r\n}\r\n\r\n// we aggregate all pending updates until the issues are resolved\r\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\r\n  new Map()\r\n\r\nfunction aggregateUpdates(msg: PartialServerMessage) {\r\n  const key = resourceKey(msg.resource)\r\n  let aggregated = chunkListsWithPendingUpdates.get(key)\r\n\r\n  if (aggregated) {\r\n    aggregated.instruction = mergeChunkListUpdates(\r\n      aggregated.instruction,\r\n      msg.instruction\r\n    )\r\n  } else {\r\n    chunkListsWithPendingUpdates.set(key, msg)\r\n  }\r\n}\r\n\r\nfunction applyAggregatedUpdates() {\r\n  if (chunkListsWithPendingUpdates.size === 0) return\r\n  hooks.beforeRefresh()\r\n  for (const msg of chunkListsWithPendingUpdates.values()) {\r\n    triggerUpdate(msg)\r\n  }\r\n  chunkListsWithPendingUpdates.clear()\r\n  finalizeUpdate()\r\n}\r\n\r\nfunction mergeChunkListUpdates(\r\n  updateA: ChunkListUpdate,\r\n  updateB: ChunkListUpdate\r\n): ChunkListUpdate {\r\n  let chunks\r\n  if (updateA.chunks != null) {\r\n    if (updateB.chunks == null) {\r\n      chunks = updateA.chunks\r\n    } else {\r\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks)\r\n    }\r\n  } else if (updateB.chunks != null) {\r\n    chunks = updateB.chunks\r\n  }\r\n\r\n  let merged\r\n  if (updateA.merged != null) {\r\n    if (updateB.merged == null) {\r\n      merged = updateA.merged\r\n    } else {\r\n      // Since `merged` is an array of updates, we need to merge them all into\r\n      // one, consistent update.\r\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\r\n      // no need to key on the `type` field.\r\n      let update = updateA.merged[0]\r\n      for (let i = 1; i < updateA.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateA.merged[i]\r\n        )\r\n      }\r\n\r\n      for (let i = 0; i < updateB.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateB.merged[i]\r\n        )\r\n      }\r\n\r\n      merged = [update]\r\n    }\r\n  } else if (updateB.merged != null) {\r\n    merged = updateB.merged\r\n  }\r\n\r\n  return {\r\n    type: 'ChunkListUpdate',\r\n    chunks,\r\n    merged,\r\n  }\r\n}\r\n\r\nfunction mergeChunkListChunks(\r\n  chunksA: Record<ChunkPath, ChunkUpdate>,\r\n  chunksB: Record<ChunkPath, ChunkUpdate>\r\n): Record<ChunkPath, ChunkUpdate> {\r\n  const chunks: Record<ChunkPath, ChunkUpdate> = {}\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\r\n    [ChunkPath, ChunkUpdate]\r\n  >) {\r\n    const chunkUpdateB = chunksB[chunkPath]\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB)\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\r\n    [ChunkPath, ChunkUpdate]\r\n  >) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB\r\n    }\r\n  }\r\n\r\n  return chunks\r\n}\r\n\r\nfunction mergeChunkUpdates(\r\n  updateA: ChunkUpdate,\r\n  updateB: ChunkUpdate\r\n): ChunkUpdate | undefined {\r\n  if (\r\n    (updateA.type === 'added' && updateB.type === 'deleted') ||\r\n    (updateA.type === 'deleted' && updateB.type === 'added')\r\n  ) {\r\n    return undefined\r\n  }\r\n\r\n  if (updateA.type === 'partial') {\r\n    invariant(updateA.instruction, 'Partial updates are unsupported')\r\n  }\r\n\r\n  if (updateB.type === 'partial') {\r\n    invariant(updateB.instruction, 'Partial updates are unsupported')\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nfunction mergeChunkListEcmascriptMergedUpdates(\r\n  mergedA: EcmascriptMergedUpdate,\r\n  mergedB: EcmascriptMergedUpdate\r\n): EcmascriptMergedUpdate {\r\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries)\r\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks)\r\n\r\n  return {\r\n    type: 'EcmascriptMergedUpdate',\r\n    entries,\r\n    chunks,\r\n  }\r\n}\r\n\r\nfunction mergeEcmascriptChunkEntries(\r\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\r\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\r\n): Record<ModuleId, EcmascriptModuleEntry> {\r\n  return { ...entriesA, ...entriesB }\r\n}\r\n\r\nfunction mergeEcmascriptChunksUpdates(\r\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\r\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\r\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\r\n  if (chunksA == null) {\r\n    return chunksB\r\n  }\r\n\r\n  if (chunksB == null) {\r\n    return chunksA\r\n  }\r\n\r\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {}\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\r\n    [ChunkPath, EcmascriptMergedChunkUpdate]\r\n  >) {\r\n    const chunkUpdateB = chunksB[chunkPath]\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\r\n        chunkUpdateA,\r\n        chunkUpdateB\r\n      )\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\r\n    [ChunkPath, EcmascriptMergedChunkUpdate]\r\n  >) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB\r\n    }\r\n  }\r\n\r\n  if (Object.keys(chunks).length === 0) {\r\n    return undefined\r\n  }\r\n\r\n  return chunks\r\n}\r\n\r\nfunction mergeEcmascriptChunkUpdates(\r\n  updateA: EcmascriptMergedChunkUpdate,\r\n  updateB: EcmascriptMergedChunkUpdate\r\n): EcmascriptMergedChunkUpdate | undefined {\r\n  if (updateA.type === 'added' && updateB.type === 'deleted') {\r\n    // These two completely cancel each other out.\r\n    return undefined\r\n  }\r\n\r\n  if (updateA.type === 'deleted' && updateB.type === 'added') {\r\n    const added = []\r\n    const deleted = []\r\n    const deletedModules = new Set(updateA.modules ?? [])\r\n    const addedModules = new Set(updateB.modules ?? [])\r\n\r\n    for (const moduleId of addedModules) {\r\n      if (!deletedModules.has(moduleId)) {\r\n        added.push(moduleId)\r\n      }\r\n    }\r\n\r\n    for (const moduleId of deletedModules) {\r\n      if (!addedModules.has(moduleId)) {\r\n        deleted.push(moduleId)\r\n      }\r\n    }\r\n\r\n    if (added.length === 0 && deleted.length === 0) {\r\n      return undefined\r\n    }\r\n\r\n    return {\r\n      type: 'partial',\r\n      added,\r\n      deleted,\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'partial' && updateB.type === 'partial') {\r\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])])\r\n    const deleted = new Set([\r\n      ...(updateA.deleted ?? []),\r\n      ...(updateB.deleted ?? []),\r\n    ])\r\n\r\n    if (updateB.added != null) {\r\n      for (const moduleId of updateB.added) {\r\n        deleted.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    if (updateB.deleted != null) {\r\n      for (const moduleId of updateB.deleted) {\r\n        added.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: 'partial',\r\n      added: [...added],\r\n      deleted: [...deleted],\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'added' && updateB.type === 'partial') {\r\n    const modules = new Set([\r\n      ...(updateA.modules ?? []),\r\n      ...(updateB.added ?? []),\r\n    ])\r\n\r\n    for (const moduleId of updateB.deleted ?? []) {\r\n      modules.delete(moduleId)\r\n    }\r\n\r\n    return {\r\n      type: 'added',\r\n      modules: [...modules],\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'partial' && updateB.type === 'deleted') {\r\n    // We could eagerly return `updateB` here, but this would potentially be\r\n    // incorrect if `updateA` has added modules.\r\n\r\n    const modules = new Set(updateB.modules ?? [])\r\n\r\n    if (updateA.added != null) {\r\n      for (const moduleId of updateA.added) {\r\n        modules.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: 'deleted',\r\n      modules: [...modules],\r\n    }\r\n  }\r\n\r\n  // Any other update combination is invalid.\r\n\r\n  return undefined\r\n}\r\n\r\nfunction invariant(_: never, message: string): never {\r\n  throw new Error(`Invariant: ${message}`)\r\n}\r\n\r\nconst CRITICAL = ['bug', 'error', 'fatal']\r\n\r\nfunction compareByList(list: any[], a: any, b: any) {\r\n  const aI = list.indexOf(a) + 1 || list.length\r\n  const bI = list.indexOf(b) + 1 || list.length\r\n  return aI - bI\r\n}\r\n\r\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map()\r\n\r\nfunction emitIssues() {\r\n  const issues = []\r\n  const deduplicationSet = new Set()\r\n\r\n  for (const [_, chunkIssues] of chunksWithIssues) {\r\n    for (const chunkIssue of chunkIssues) {\r\n      if (deduplicationSet.has(chunkIssue.formatted)) continue\r\n\r\n      issues.push(chunkIssue)\r\n      deduplicationSet.add(chunkIssue.formatted)\r\n    }\r\n  }\r\n\r\n  sortIssues(issues)\r\n\r\n  hooks.issues(issues)\r\n}\r\n\r\nfunction handleIssues(msg: ServerMessage): boolean {\r\n  const key = resourceKey(msg.resource)\r\n  let hasCriticalIssues = false\r\n\r\n  for (const issue of msg.issues) {\r\n    if (CRITICAL.includes(issue.severity)) {\r\n      hasCriticalIssues = true\r\n    }\r\n  }\r\n\r\n  if (msg.issues.length > 0) {\r\n    chunksWithIssues.set(key, msg.issues)\r\n  } else if (chunksWithIssues.has(key)) {\r\n    chunksWithIssues.delete(key)\r\n  }\r\n\r\n  emitIssues()\r\n\r\n  return hasCriticalIssues\r\n}\r\n\r\nconst SEVERITY_ORDER = ['bug', 'fatal', 'error', 'warning', 'info', 'log']\r\nconst CATEGORY_ORDER = [\r\n  'parse',\r\n  'resolve',\r\n  'code generation',\r\n  'rendering',\r\n  'typescript',\r\n  'other',\r\n]\r\n\r\nfunction sortIssues(issues: Issue[]) {\r\n  issues.sort((a, b) => {\r\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity)\r\n    if (first !== 0) return first\r\n    return compareByList(CATEGORY_ORDER, a.category, b.category)\r\n  })\r\n}\r\n\r\nconst hooks = {\r\n  beforeRefresh: () => {},\r\n  refresh: () => {},\r\n  buildOk: () => {},\r\n  issues: (_issues: Issue[]) => {},\r\n}\r\n\r\nexport function setHooks(newHooks: typeof hooks) {\r\n  Object.assign(hooks, newHooks)\r\n}\r\n\r\nfunction handleSocketMessage(msg: ServerMessage) {\r\n  sortIssues(msg.issues)\r\n\r\n  handleIssues(msg)\r\n\r\n  switch (msg.type) {\r\n    case 'issues':\r\n      // issues are already handled\r\n      break\r\n    case 'partial':\r\n      // aggregate updates\r\n      aggregateUpdates(msg)\r\n      break\r\n    default:\r\n      // run single update\r\n      const runHooks = chunkListsWithPendingUpdates.size === 0\r\n      if (runHooks) hooks.beforeRefresh()\r\n      triggerUpdate(msg)\r\n      if (runHooks) finalizeUpdate()\r\n      break\r\n  }\r\n}\r\n\r\nfunction finalizeUpdate() {\r\n  hooks.refresh()\r\n  hooks.buildOk()\r\n\r\n  // This is used by the Next.js integration test suite to notify it when HMR\r\n  // updates have been completed.\r\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\r\n  if (globalThis.__NEXT_HMR_CB) {\r\n    globalThis.__NEXT_HMR_CB()\r\n    globalThis.__NEXT_HMR_CB = null\r\n  }\r\n}\r\n\r\nfunction subscribeToChunkUpdate(\r\n  chunkListPath: ChunkListPath,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n): () => void {\r\n  return subscribeToUpdate(\r\n    {\r\n      path: chunkListPath,\r\n    },\r\n    sendMessage,\r\n    callback\r\n  )\r\n}\r\n\r\nexport function subscribeToUpdate(\r\n  resource: ResourceIdentifier,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n) {\r\n  const key = resourceKey(resource)\r\n  let callbackSet: UpdateCallbackSet\r\n  const existingCallbackSet = updateCallbackSets.get(key)\r\n  if (!existingCallbackSet) {\r\n    callbackSet = {\r\n      callbacks: new Set([callback]),\r\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\r\n    }\r\n    updateCallbackSets.set(key, callbackSet)\r\n  } else {\r\n    existingCallbackSet.callbacks.add(callback)\r\n    callbackSet = existingCallbackSet\r\n  }\r\n\r\n  return () => {\r\n    callbackSet.callbacks.delete(callback)\r\n\r\n    if (callbackSet.callbacks.size === 0) {\r\n      callbackSet.unsubscribe()\r\n      updateCallbackSets.delete(key)\r\n    }\r\n  }\r\n}\r\n\r\nfunction triggerUpdate(msg: ServerMessage) {\r\n  const key = resourceKey(msg.resource)\r\n  const callbackSet = updateCallbackSets.get(key)\r\n  if (!callbackSet) {\r\n    return\r\n  }\r\n\r\n  for (const callback of callbackSet.callbacks) {\r\n    callback(msg)\r\n  }\r\n\r\n  if (msg.type === 'notFound') {\r\n    // This indicates that the resource which we subscribed to either does not exist or\r\n    // has been deleted. In either case, we should clear all update callbacks, so if a\r\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\r\n    // message to the server.\r\n    // No need to send an \"unsubscribe\" message to the server, it will have already\r\n    // dropped the update stream before sending the \"notFound\" message.\r\n    updateCallbackSets.delete(key)\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,2DAA2D;AAC3D,4DAA4D;AAC5D,6DAA6D;AAC7D,6DAA6D;;;;;;AAkBtD,SAAS,QAAQ,KAIR;QAJQ,EACtB,kBAAkB,EAClB,WAAW,EACX,gBAAgB,QAAQ,KAAK,EACf,GAJQ;IAKtB,mBAAmB,CAAC;QAClB,OAAQ,IAAI,IAAI;YACd,KAAK;gBACH,sBAAsB;gBACtB;YACF;gBACE,IAAI;oBACF,IAAI,MAAM,OAAO,CAAC,IAAI,IAAI,GAAG;wBAC3B,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE,IAAK;4BACxC,oBAAoB,IAAI,IAAI,CAAC,EAAE;wBACjC;oBACF,OAAO;wBACL,oBAAoB,IAAI,IAAI;oBAC9B;oBACA;gBACF,EAAE,OAAO,GAAY;oBACnB,QAAQ,IAAI,CACV,8CACE,mIACA,qIACA,+GACA,8HACA;oBAEJ,cAAc;oBACd,SAAS,MAAM;gBACjB;gBACA;QACJ;IACF;IAEA,MAAM,SAAS,WAAW,gCAAgC;IAC1D,IAAI,UAAU,QAAQ,CAAC,MAAM,OAAO,CAAC,SAAS;QAC5C,MAAM,IAAI,MAAM;IAClB;IACA,WAAW,gCAAgC,GAAG;QAC5C,MAAM;gBAAC,CAAC,WAAW,SAA0C;YAC3D,uBAAuB,WAAW,aAAa;QACjD;IACF;IAEA,IAAI,MAAM,OAAO,CAAC,SAAS;QACzB,KAAK,MAAM,CAAC,WAAW,SAAS,IAAI,OAAQ;YAC1C,uBAAuB,WAAW,aAAa;QACjD;IACF;AACF;AAOA,MAAM,qBAA0D,IAAI;AAEpE,SAAS,SAAS,WAAwB,EAAE,OAAsB;IAChE,YAAY,KAAK,SAAS,CAAC;AAC7B;AAIA,SAAS,YAAY,QAA4B;IAC/C,OAAO,KAAK,SAAS,CAAC;QACpB,MAAM,SAAS,IAAI;QACnB,SAAS,SAAS,OAAO,IAAI;IAC/B;AACF;AAEA,SAAS,mBACP,WAAwB,EACxB,QAA4B;IAE5B,SAAS,aAAa;QACpB,MAAM;QACN,GAAG,QAAQ;IACb;IAEA,OAAO;QACL,SAAS,aAAa;YACpB,MAAM;YACN,GAAG,QAAQ;QACb;IACF;AACF;AAEA,SAAS,sBAAsB,WAAwB;IACrD,KAAK,MAAM,OAAO,mBAAmB,IAAI,GAAI;QAC3C,mBAAmB,aAAa,KAAK,KAAK,CAAC;IAC7C;AACF;AAEA,iEAAiE;AACjE,MAAM,+BACJ,IAAI;AAEN,SAAS,iBAAiB,GAAyB;IACjD,MAAM,MAAM,YAAY,IAAI,QAAQ;IACpC,IAAI,aAAa,6BAA6B,GAAG,CAAC;IAElD,IAAI,YAAY;QACd,WAAW,WAAW,GAAG,sBACvB,WAAW,WAAW,EACtB,IAAI,WAAW;IAEnB,OAAO;QACL,6BAA6B,GAAG,CAAC,KAAK;IACxC;AACF;AAEA,SAAS;IACP,IAAI,6BAA6B,IAAI,KAAK,GAAG;IAC7C,MAAM,aAAa;IACnB,KAAK,MAAM,OAAO,6BAA6B,MAAM,GAAI;QACvD,cAAc;IAChB;IACA,6BAA6B,KAAK;IAClC;AACF;AAEA,SAAS,sBACP,OAAwB,EACxB,OAAwB;IAExB,IAAI;IACJ,IAAI,QAAQ,MAAM,IAAI,MAAM;QAC1B,IAAI,QAAQ,MAAM,IAAI,MAAM;YAC1B,SAAS,QAAQ,MAAM;QACzB,OAAO;YACL,SAAS,qBAAqB,QAAQ,MAAM,EAAE,QAAQ,MAAM;QAC9D;IACF,OAAO,IAAI,QAAQ,MAAM,IAAI,MAAM;QACjC,SAAS,QAAQ,MAAM;IACzB;IAEA,IAAI;IACJ,IAAI,QAAQ,MAAM,IAAI,MAAM;QAC1B,IAAI,QAAQ,MAAM,IAAI,MAAM;YAC1B,SAAS,QAAQ,MAAM;QACzB,OAAO;YACL,wEAAwE;YACxE,0BAA0B;YAC1B,0EAA0E;YAC1E,sCAAsC;YACtC,IAAI,SAAS,QAAQ,MAAM,CAAC,EAAE;YAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,CAAC,MAAM,EAAE,IAAK;gBAC9C,SAAS,sCACP,QACA,QAAQ,MAAM,CAAC,EAAE;YAErB;YAEA,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,CAAC,MAAM,EAAE,IAAK;gBAC9C,SAAS,sCACP,QACA,QAAQ,MAAM,CAAC,EAAE;YAErB;YAEA,SAAS;gBAAC;aAAO;QACnB;IACF,OAAO,IAAI,QAAQ,MAAM,IAAI,MAAM;QACjC,SAAS,QAAQ,MAAM;IACzB;IAEA,OAAO;QACL,MAAM;QACN;QACA;IACF;AACF;AAEA,SAAS,qBACP,OAAuC,EACvC,OAAuC;IAEvC,MAAM,SAAyC,CAAC;IAEhD,KAAK,MAAM,CAAC,WAAW,aAAa,IAAI,OAAO,OAAO,CAAC,SAEpD;QACD,MAAM,eAAe,OAAO,CAAC,UAAU;QACvC,IAAI,gBAAgB,MAAM;YACxB,MAAM,eAAe,kBAAkB,cAAc;YACrD,IAAI,gBAAgB,MAAM;gBACxB,MAAM,CAAC,UAAU,GAAG;YACtB;QACF,OAAO;YACL,MAAM,CAAC,UAAU,GAAG;QACtB;IACF;IAEA,KAAK,MAAM,CAAC,WAAW,aAAa,IAAI,OAAO,OAAO,CAAC,SAEpD;QACD,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM;YAC7B,MAAM,CAAC,UAAU,GAAG;QACtB;IACF;IAEA,OAAO;AACT;AAEA,SAAS,kBACP,OAAoB,EACpB,OAAoB;IAEpB,IACE,AAAC,QAAQ,IAAI,KAAK,WAAW,QAAQ,IAAI,KAAK,aAC7C,QAAQ,IAAI,KAAK,aAAa,QAAQ,IAAI,KAAK,SAChD;QACA,OAAO;IACT;IAEA,IAAI,QAAQ,IAAI,KAAK,WAAW;QAC9B,UAAU,QAAQ,WAAW,EAAE;IACjC;IAEA,IAAI,QAAQ,IAAI,KAAK,WAAW;QAC9B,UAAU,QAAQ,WAAW,EAAE;IACjC;IAEA,OAAO;AACT;AAEA,SAAS,sCACP,OAA+B,EAC/B,OAA+B;IAE/B,MAAM,UAAU,4BAA4B,QAAQ,OAAO,EAAE,QAAQ,OAAO;IAC5E,MAAM,SAAS,6BAA6B,QAAQ,MAAM,EAAE,QAAQ,MAAM;IAE1E,OAAO;QACL,MAAM;QACN;QACA;IACF;AACF;AAEA,SAAS,4BACP,QAA6D,EAC7D,QAA6D;IAE7D,OAAO;QAAE,GAAG,QAAQ;QAAE,GAAG,QAAQ;IAAC;AACpC;AAEA,SAAS,6BACP,OAAmE,EACnE,OAAmE;IAEnE,IAAI,WAAW,MAAM;QACnB,OAAO;IACT;IAEA,IAAI,WAAW,MAAM;QACnB,OAAO;IACT;IAEA,MAAM,SAAyD,CAAC;IAEhE,KAAK,MAAM,CAAC,WAAW,aAAa,IAAI,OAAO,OAAO,CAAC,SAEpD;QACD,MAAM,eAAe,OAAO,CAAC,UAAU;QACvC,IAAI,gBAAgB,MAAM;YACxB,MAAM,eAAe,4BACnB,cACA;YAEF,IAAI,gBAAgB,MAAM;gBACxB,MAAM,CAAC,UAAU,GAAG;YACtB;QACF,OAAO;YACL,MAAM,CAAC,UAAU,GAAG;QACtB;IACF;IAEA,KAAK,MAAM,CAAC,WAAW,aAAa,IAAI,OAAO,OAAO,CAAC,SAEpD;QACD,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM;YAC7B,MAAM,CAAC,UAAU,GAAG;QACtB;IACF;IAEA,IAAI,OAAO,IAAI,CAAC,QAAQ,MAAM,KAAK,GAAG;QACpC,OAAO;IACT;IAEA,OAAO;AACT;AAEA,SAAS,4BACP,OAAoC,EACpC,OAAoC;IAEpC,IAAI,QAAQ,IAAI,KAAK,WAAW,QAAQ,IAAI,KAAK,WAAW;QAC1D,8CAA8C;QAC9C,OAAO;IACT;IAEA,IAAI,QAAQ,IAAI,KAAK,aAAa,QAAQ,IAAI,KAAK,SAAS;QAC1D,MAAM,QAAQ,EAAE;QAChB,MAAM,UAAU,EAAE;YACa;QAA/B,MAAM,iBAAiB,IAAI,IAAI,CAAA,mBAAA,QAAQ,OAAO,cAAf,8BAAA,mBAAmB,EAAE;YACvB;QAA7B,MAAM,eAAe,IAAI,IAAI,CAAA,mBAAA,QAAQ,OAAO,cAAf,8BAAA,mBAAmB,EAAE;QAElD,KAAK,MAAM,YAAY,aAAc;YACnC,IAAI,CAAC,eAAe,GAAG,CAAC,WAAW;gBACjC,MAAM,IAAI,CAAC;YACb;QACF;QAEA,KAAK,MAAM,YAAY,eAAgB;YACrC,IAAI,CAAC,aAAa,GAAG,CAAC,WAAW;gBAC/B,QAAQ,IAAI,CAAC;YACf;QACF;QAEA,IAAI,MAAM,MAAM,KAAK,KAAK,QAAQ,MAAM,KAAK,GAAG;YAC9C,OAAO;QACT;QAEA,OAAO;YACL,MAAM;YACN;YACA;QACF;IACF;IAEA,IAAI,QAAQ,IAAI,KAAK,aAAa,QAAQ,IAAI,KAAK,WAAW;YACjC,gBAA0B;QAArD,MAAM,QAAQ,IAAI,IAAI;eAAK,CAAA,iBAAA,QAAQ,KAAK,cAAb,4BAAA,iBAAiB,EAAE;eAAO,CAAA,iBAAA,QAAQ,KAAK,cAAb,4BAAA,iBAAiB,EAAE;SAAE;YAEpE,kBACA;QAFN,MAAM,UAAU,IAAI,IAAI;eAClB,CAAA,mBAAA,QAAQ,OAAO,cAAf,8BAAA,mBAAmB,EAAE;eACrB,CAAA,mBAAA,QAAQ,OAAO,cAAf,8BAAA,mBAAmB,EAAE;SAC1B;QAED,IAAI,QAAQ,KAAK,IAAI,MAAM;YACzB,KAAK,MAAM,YAAY,QAAQ,KAAK,CAAE;gBACpC,QAAQ,MAAM,CAAC;YACjB;QACF;QAEA,IAAI,QAAQ,OAAO,IAAI,MAAM;YAC3B,KAAK,MAAM,YAAY,QAAQ,OAAO,CAAE;gBACtC,MAAM,MAAM,CAAC;YACf;QACF;QAEA,OAAO;YACL,MAAM;YACN,OAAO;mBAAI;aAAM;YACjB,SAAS;mBAAI;aAAQ;QACvB;IACF;IAEA,IAAI,QAAQ,IAAI,KAAK,WAAW,QAAQ,IAAI,KAAK,WAAW;YAEpD,mBACA;QAFN,MAAM,UAAU,IAAI,IAAI;eAClB,CAAA,oBAAA,QAAQ,OAAO,cAAf,+BAAA,oBAAmB,EAAE;eACrB,CAAA,kBAAA,QAAQ,KAAK,cAAb,6BAAA,kBAAiB,EAAE;SACxB;YAEsB;QAAvB,KAAK,MAAM,YAAY,CAAA,oBAAA,QAAQ,OAAO,cAAf,+BAAA,oBAAmB,EAAE,CAAE;YAC5C,QAAQ,MAAM,CAAC;QACjB;QAEA,OAAO;YACL,MAAM;YACN,SAAS;mBAAI;aAAQ;QACvB;IACF;IAEA,IAAI,QAAQ,IAAI,KAAK,aAAa,QAAQ,IAAI,KAAK,WAAW;YAIpC;QAHxB,wEAAwE;QACxE,4CAA4C;QAE5C,MAAM,UAAU,IAAI,IAAI,CAAA,oBAAA,QAAQ,OAAO,cAAf,+BAAA,oBAAmB,EAAE;QAE7C,IAAI,QAAQ,KAAK,IAAI,MAAM;YACzB,KAAK,MAAM,YAAY,QAAQ,KAAK,CAAE;gBACpC,QAAQ,MAAM,CAAC;YACjB;QACF;QAEA,OAAO;YACL,MAAM;YACN,SAAS;mBAAI;aAAQ;QACvB;IACF;IAEA,2CAA2C;IAE3C,OAAO;AACT;AAEA,SAAS,UAAU,CAAQ,EAAE,OAAe;IAC1C,MAAM,IAAI,MAAM,AAAC,cAAqB,OAAR;AAChC;AAEA,MAAM,WAAW;IAAC;IAAO;IAAS;CAAQ;AAE1C,SAAS,cAAc,IAAW,EAAE,CAAM,EAAE,CAAM;IAChD,MAAM,KAAK,KAAK,OAAO,CAAC,KAAK,KAAK,KAAK,MAAM;IAC7C,MAAM,KAAK,KAAK,OAAO,CAAC,KAAK,KAAK,KAAK,MAAM;IAC7C,OAAO,KAAK;AACd;AAEA,MAAM,mBAA8C,IAAI;AAExD,SAAS;IACP,MAAM,SAAS,EAAE;IACjB,MAAM,mBAAmB,IAAI;IAE7B,KAAK,MAAM,CAAC,GAAG,YAAY,IAAI,iBAAkB;QAC/C,KAAK,MAAM,cAAc,YAAa;YACpC,IAAI,iBAAiB,GAAG,CAAC,WAAW,SAAS,GAAG;YAEhD,OAAO,IAAI,CAAC;YACZ,iBAAiB,GAAG,CAAC,WAAW,SAAS;QAC3C;IACF;IAEA,WAAW;IAEX,MAAM,MAAM,CAAC;AACf;AAEA,SAAS,aAAa,GAAkB;IACtC,MAAM,MAAM,YAAY,IAAI,QAAQ;IACpC,IAAI,oBAAoB;IAExB,KAAK,MAAM,SAAS,IAAI,MAAM,CAAE;QAC9B,IAAI,SAAS,QAAQ,CAAC,MAAM,QAAQ,GAAG;YACrC,oBAAoB;QACtB;IACF;IAEA,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,GAAG;QACzB,iBAAiB,GAAG,CAAC,KAAK,IAAI,MAAM;IACtC,OAAO,IAAI,iBAAiB,GAAG,CAAC,MAAM;QACpC,iBAAiB,MAAM,CAAC;IAC1B;IAEA;IAEA,OAAO;AACT;AAEA,MAAM,iBAAiB;IAAC;IAAO;IAAS;IAAS;IAAW;IAAQ;CAAM;AAC1E,MAAM,iBAAiB;IACrB;IACA;IACA;IACA;IACA;IACA;CACD;AAED,SAAS,WAAW,MAAe;IACjC,OAAO,IAAI,CAAC,CAAC,GAAG;QACd,MAAM,QAAQ,cAAc,gBAAgB,EAAE,QAAQ,EAAE,EAAE,QAAQ;QAClE,IAAI,UAAU,GAAG,OAAO;QACxB,OAAO,cAAc,gBAAgB,EAAE,QAAQ,EAAE,EAAE,QAAQ;IAC7D;AACF;AAEA,MAAM,QAAQ;IACZ,eAAe,KAAO;IACtB,SAAS,KAAO;IAChB,SAAS,KAAO;IAChB,QAAQ,CAAC,WAAsB;AACjC;AAEO,SAAS,SAAS,QAAsB;IAC7C,OAAO,MAAM,CAAC,OAAO;AACvB;AAEA,SAAS,oBAAoB,GAAkB;IAC7C,WAAW,IAAI,MAAM;IAErB,aAAa;IAEb,OAAQ,IAAI,IAAI;QACd,KAAK;YAEH;QACF,KAAK;YACH,oBAAoB;YACpB,iBAAiB;YACjB;QACF;YACE,oBAAoB;YACpB,MAAM,WAAW,6BAA6B,IAAI,KAAK;YACvD,IAAI,UAAU,MAAM,aAAa;YACjC,cAAc;YACd,IAAI,UAAU;YACd;IACJ;AACF;AAEA,SAAS;IACP,MAAM,OAAO;IACb,MAAM,OAAO;IAEb,2EAA2E;IAC3E,+BAA+B;IAC/B,oFAAoF;IACpF,IAAI,WAAW,aAAa,EAAE;QAC5B,WAAW,aAAa;QACxB,WAAW,aAAa,GAAG;IAC7B;AACF;AAEA,SAAS,uBACP,aAA4B,EAC5B,WAAwB,EACxB,QAAwB;IAExB,OAAO,kBACL;QACE,MAAM;IACR,GACA,aACA;AAEJ;AAEO,SAAS,kBACd,QAA4B,EAC5B,WAAwB,EACxB,QAAwB;IAExB,MAAM,MAAM,YAAY;IACxB,IAAI;IACJ,MAAM,sBAAsB,mBAAmB,GAAG,CAAC;IACnD,IAAI,CAAC,qBAAqB;QACxB,cAAc;YACZ,WAAW,IAAI,IAAI;gBAAC;aAAS;YAC7B,aAAa,mBAAmB,aAAa;QAC/C;QACA,mBAAmB,GAAG,CAAC,KAAK;IAC9B,OAAO;QACL,oBAAoB,SAAS,CAAC,GAAG,CAAC;QAClC,cAAc;IAChB;IAEA,OAAO;QACL,YAAY,SAAS,CAAC,MAAM,CAAC;QAE7B,IAAI,YAAY,SAAS,CAAC,IAAI,KAAK,GAAG;YACpC,YAAY,WAAW;YACvB,mBAAmB,MAAM,CAAC;QAC5B;IACF;AACF;AAEA,SAAS,cAAc,GAAkB;IACvC,MAAM,MAAM,YAAY,IAAI,QAAQ;IACpC,MAAM,cAAc,mBAAmB,GAAG,CAAC;IAC3C,IAAI,CAAC,aAAa;QAChB;IACF;IAEA,KAAK,MAAM,YAAY,YAAY,SAAS,CAAE;QAC5C,SAAS;IACX;IAEA,IAAI,IAAI,IAAI,KAAK,YAAY;QAC3B,mFAAmF;QACnF,kFAAkF;QAClF,oFAAoF;QACpF,yBAAyB;QACzB,+EAA+E;QAC/E,mEAAmE;QACnE,mBAAmB,MAAM,CAAC;IAC5B;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["file:///D:/printx/redmoo/wallet/useWallet.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport { getWallets } from '@mysten/wallet-standard';\r\nimport { SuiClient, getFullnodeUrl } from '@mysten/sui.js/client';\r\nimport { TransactionBlock } from '@mysten/sui.js/transactions';\r\n\r\n// Sui devnet configuration\r\nconst SUI_DEVNET_RPC = 'https://fullnode.devnet.sui.io:443';\r\nconst SUI_DEVNET_FAUCET = 'https://faucet.devnet.sui.io/gas';\r\n\r\n// Initialize Sui client for devnet\r\nexport const suiClient = new SuiClient({\r\n  url: getFullnodeUrl('devnet'),\r\n});\r\n\r\n// Utility function to validate Sui address format\r\nfunction isValidSuiAddress(address) {\r\n  console.log('🔍 Validating address:', address);\r\n  \r\n  if (!address || typeof address !== 'string') {\r\n    console.log('❌ Address validation failed: not a string or empty');\r\n    return false;\r\n  }\r\n  \r\n  // Remove '0x' prefix if present\r\n  const cleanAddress = address.startsWith('0x') ? address.slice(2) : address;\r\n  console.log('🧹 Clean address:', cleanAddress, 'Length:', cleanAddress.length);\r\n  \r\n  // Sui addresses should be 64 characters of hex (32 bytes)\r\n  if (cleanAddress.length !== 64) {\r\n    console.log('❌ Address validation failed: wrong length', cleanAddress.length, 'expected 64');\r\n    return false;\r\n  }\r\n  \r\n  // Check if it's valid hex\r\n  const isValidHex = /^[0-9a-fA-F]+$/.test(cleanAddress);\r\n  console.log('🔢 Hex validation:', isValidHex);\r\n  \r\n  if (!isValidHex) {\r\n    console.log('❌ Address validation failed: invalid hex characters');\r\n    return false;\r\n  }\r\n  \r\n  console.log('✅ Address validation passed');\r\n  return true;\r\n}\r\n\r\n// Custom hook for Sui wallet management\r\nexport function useSuiWallet() {\r\n  const [wallets, setWallets] = useState([]);\r\n  const [currentWallet, setCurrentWallet] = useState(null);\r\n  const [currentAccount, setCurrentAccount] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [balance, setBalance] = useState('0');\r\n  const [error, setError] = useState(null);\r\n  const [justConnected, setJustConnected] = useState(false);\r\n  const [skipConnectionCheck, setSkipConnectionCheck] = useState(false);\r\n\r\n  // Initialize wallets\r\n  useEffect(() => {\r\n    const initializeWallets = () => {\r\n      const availableWallets = getWallets().get();\r\n      setWallets(availableWallets);\r\n    };\r\n\r\n    initializeWallets();\r\n\r\n    // Listen for wallet changes\r\n    const unsubscribe = getWallets().on('change', (wallets) => {\r\n      setWallets(wallets);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Disconnect wallet (defined early to avoid dependency issues)\r\n  const disconnect = useCallback(async () => {\r\n    try {\r\n      if (currentWallet && currentWallet.features['standard:disconnect']) {\r\n        await currentWallet.features['standard:disconnect'].disconnect();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error disconnecting wallet:', error);\r\n    } finally {\r\n      setCurrentWallet(null);\r\n      setCurrentAccount(null);\r\n      setIsConnected(false);\r\n      setBalance('0');\r\n      setError(null);\r\n      setJustConnected(false);\r\n      setSkipConnectionCheck(false);\r\n\r\n      // Clear localStorage\r\n      localStorage.removeItem('connected_wallet');\r\n      localStorage.removeItem('wallet_account');\r\n      localStorage.removeItem('walletConnected');\r\n      localStorage.removeItem('walletAddress');\r\n\r\n      // Dispatch storage event\r\n      window.dispatchEvent(new Event('storage'));\r\n    }\r\n  }, [currentWallet]);\r\n\r\n  // Check existing connection on mount\r\n  useEffect(() => {\r\n    const checkConnection = async () => {\r\n      try {\r\n        // Don't check connection if we just connected or if disabled\r\n        if (justConnected || skipConnectionCheck) {\r\n          console.log('⏭️ Skipping connection check - just connected or disabled');\r\n          if (justConnected) setJustConnected(false);\r\n          return;\r\n        }\r\n\r\n        console.log('🔍 Checking existing connection...');\r\n        \r\n        // Add small delay to prevent race conditions during navigation\r\n        await new Promise(resolve => setTimeout(resolve, 100));\r\n        \r\n        // TEMPORARY: Clear any potentially corrupted data on startup\r\n        const allStorageData = {\r\n          connected_wallet: localStorage.getItem('connected_wallet'),\r\n          wallet_account: localStorage.getItem('wallet_account'),\r\n          walletConnected: localStorage.getItem('walletConnected'),\r\n          walletAddress: localStorage.getItem('walletAddress')\r\n        };\r\n        console.log('📋 All localStorage data on startup:', allStorageData);\r\n        \r\n        const savedWalletName = localStorage.getItem('connected_wallet');\r\n        const savedAccount = localStorage.getItem('wallet_account');\r\n        \r\n        console.log('📋 Saved wallet name:', savedWalletName);\r\n        console.log('📋 Saved account (raw):', savedAccount);\r\n        \r\n        if (savedWalletName && savedAccount) {\r\n          const wallet = wallets.find(w => w.name === savedWalletName);\r\n          console.log('🔍 Found wallet:', wallet?.name);\r\n          \r\n          // Check for corrupted account data (empty object)\r\n          if (savedAccount === '{}') {\r\n            console.warn('🧹 Found corrupted account data (empty object), clearing...');\r\n            disconnect();\r\n            return;\r\n          }\r\n          \r\n          if (wallet) {\r\n            const accountData = JSON.parse(savedAccount);\r\n            console.log('📋 Parsed account data:', accountData);\r\n            console.log('📋 Account data keys:', Object.keys(accountData));\r\n            \r\n            // Validate address format before proceeding\r\n            console.log('🔍 About to validate saved address:', accountData.address);\r\n            if (!accountData.address) {\r\n              console.warn('❌ No address found in localStorage, clearing connection');\r\n              disconnect();\r\n              return;\r\n            }\r\n            \r\n            if (!isValidSuiAddress(accountData.address)) {\r\n              console.warn('❌ Invalid Sui address format found in localStorage, clearing connection');\r\n              disconnect();\r\n              return;\r\n            }\r\n            \r\n            // Reconstruct the account object with proper format\r\n            const restoredAccount = {\r\n              address: accountData.address,\r\n              publicKey: accountData.publicKey ? new Uint8Array(accountData.publicKey) : null,\r\n              chains: accountData.chains || [],\r\n              features: accountData.features || []\r\n            };\r\n            \r\n            console.log('✅ Address validation passed, restoring connection');\r\n            console.log('🔄 Restored account:', restoredAccount);\r\n            setCurrentWallet(wallet);\r\n            setCurrentAccount(restoredAccount);\r\n            setIsConnected(true);\r\n            await fetchBalance(accountData.address);\r\n          }\r\n        } else {\r\n          console.log('ℹ️ No saved connection found');\r\n        }\r\n      } catch (error) {\r\n        console.error('❌ Error checking existing connection:', error);\r\n        disconnect();\r\n      }\r\n    };\r\n\r\n    if (wallets.length > 0) {\r\n      checkConnection();\r\n    }\r\n  }, [wallets, justConnected, skipConnectionCheck, disconnect]);\r\n\r\n  // Fetch balance for current account\r\n  const fetchBalance = useCallback(async (address) => {\r\n    try {\r\n      // Validate address before making the API call\r\n      if (!address || !isValidSuiAddress(address)) {\r\n        console.warn('Invalid address provided to fetchBalance:', address);\r\n        setBalance('0');\r\n        return;\r\n      }\r\n\r\n      const balanceData = await suiClient.getBalance({\r\n        owner: address,\r\n        coinType: '0x2::sui::SUI'\r\n      });\r\n      setBalance(balanceData.totalBalance);\r\n    } catch (error) {\r\n      console.error('Error fetching balance:', error);\r\n      setBalance('0');\r\n      \r\n      // If it's an invalid address error, clear the connection\r\n      if (error.message && error.message.includes('Invalid Sui address')) {\r\n        console.warn('Invalid Sui address detected, disconnecting wallet');\r\n        disconnect();\r\n      }\r\n    }\r\n  }, [disconnect]);\r\n\r\n  // Connect to wallet\r\n  const connect = useCallback(async (wallet) => {\r\n    console.log('🔗 Attempting to connect wallet:', wallet?.name);\r\n    \r\n    if (!wallet) {\r\n      console.error('❌ No wallet provided to connect function');\r\n      setError('No wallet provided');\r\n      return false;\r\n    }\r\n    \r\n    if (isConnecting) {\r\n      console.log('⏳ Already connecting, skipping...');\r\n      return false;\r\n    }\r\n\r\n    setIsConnecting(true);\r\n    setError(null);\r\n    setSkipConnectionCheck(true); // Disable connection checking during connection\r\n\r\n    try {\r\n      console.log('📋 Wallet features available:', Object.keys(wallet.features || {}));\r\n      \r\n      // Check if wallet has the required connection feature\r\n      if (!wallet.features || !wallet.features['standard:connect']) {\r\n        throw new Error(`Wallet ${wallet.name} does not support standard connection`);\r\n      }\r\n\r\n      console.log('🚀 Calling wallet connect...');\r\n      const result = await wallet.features['standard:connect'].connect();\r\n      console.log('📥 Connection result:', result);\r\n      \r\n      if (result.accounts && result.accounts.length > 0) {\r\n        const account = result.accounts[0];\r\n        console.log('✅ Account received:', {\r\n          address: account.address,\r\n          publicKey: account.publicKey\r\n        });\r\n        console.log('🔍 Full account object:', account);\r\n        console.log('🔍 Account object keys:', Object.keys(account));\r\n        console.log('🔍 JSON.stringify test:', JSON.stringify(account));\r\n\r\n        // Validate the account address\r\n        if (!account.address || !isValidSuiAddress(account.address)) {\r\n          throw new Error(`Invalid address received from wallet: ${account.address}`);\r\n        }\r\n\r\n        setCurrentWallet(wallet);\r\n        setCurrentAccount(account);\r\n        setIsConnected(true);\r\n\r\n        // Create a serializable account object with only the essential properties\r\n        const serializableAccount = {\r\n          address: account.address,\r\n          publicKey: account.publicKey ? Array.from(account.publicKey) : null,\r\n          chains: account.chains || [],\r\n          features: account.features || []\r\n        };\r\n        \r\n        console.log('📦 Serializable account:', serializableAccount);\r\n\r\n        // Save to localStorage\r\n        localStorage.setItem('connected_wallet', wallet.name);\r\n        localStorage.setItem('wallet_account', JSON.stringify(serializableAccount));\r\n        localStorage.setItem('walletConnected', 'true');\r\n        localStorage.setItem('walletAddress', account.address);\r\n\r\n        console.log('💾 Wallet data saved to localStorage');\r\n        // Verify data was saved correctly\r\n        const verification = {\r\n          connected_wallet: localStorage.getItem('connected_wallet'),\r\n          wallet_account: localStorage.getItem('wallet_account'),\r\n          walletConnected: localStorage.getItem('walletConnected'),\r\n          walletAddress: localStorage.getItem('walletAddress')\r\n        };\r\n        console.log('📋 Saved data verification:', verification);\r\n\r\n        // Fetch balance\r\n        console.log('💰 Fetching balance...');\r\n        await fetchBalance(account.address);\r\n\r\n        // Dispatch storage event for other components\r\n        window.dispatchEvent(new Event('storage'));\r\n\r\n        console.log('🎉 Wallet connected successfully!');\r\n        setJustConnected(true);\r\n        setSkipConnectionCheck(false); // Re-enable connection checking\r\n        return true;\r\n      } else {\r\n        console.error('❌ No accounts in connection result:', result);\r\n        throw new Error('No accounts returned from wallet');\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Wallet connection failed:', error);\r\n      \r\n      // More specific error messages\r\n      let errorMessage = 'Failed to connect wallet';\r\n      if (error.message.includes('User rejected')) {\r\n        errorMessage = 'Connection was cancelled by user';\r\n      } else if (error.message.includes('not found') || error.message.includes('undefined')) {\r\n        errorMessage = `Wallet ${wallet.name} is not properly installed or initialized`;\r\n      } else if (error.message.includes('Invalid address')) {\r\n        errorMessage = 'Wallet returned an invalid address format';\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      return false;\r\n    } finally {\r\n      setIsConnecting(false);\r\n      setSkipConnectionCheck(false); // Re-enable connection checking even on failure\r\n      console.log('🔓 Connection attempt finished');\r\n    }\r\n  }, [isConnecting, fetchBalance]);\r\n\r\n  // Execute transaction\r\n  const executeTransaction = useCallback(async (transaction) => {\r\n    if (!currentWallet || !currentAccount || !isConnected) {\r\n      throw new Error('Wallet not connected');\r\n    }\r\n\r\n    try {\r\n      const result = await currentWallet.features['sui:signAndExecuteTransaction'].signAndExecuteTransaction({\r\n        transaction,\r\n        account: currentAccount,\r\n        chain: 'sui:devnet',\r\n      });\r\n\r\n      // Refresh balance after transaction\r\n      if (currentAccount) {\r\n        await fetchBalance(currentAccount.address);\r\n      }\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Error executing transaction:', error);\r\n      throw error;\r\n    }\r\n  }, [currentWallet, currentAccount, isConnected, fetchBalance]);\r\n\r\n  // Request funds from faucet (devnet only)\r\n  const requestFaucetFunds = useCallback(async () => {\r\n    if (!currentAccount) {\r\n      throw new Error('No account connected');\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(SUI_DEVNET_FAUCET, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          FixedAmountRequest: {\r\n            recipient: currentAccount.address\r\n          }\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to request faucet funds');\r\n      }\r\n\r\n      // Wait a bit for the transaction to be processed\r\n      setTimeout(() => {\r\n        fetchBalance(currentAccount.address);\r\n      }, 3000);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error requesting faucet funds:', error);\r\n      throw error;\r\n    }\r\n  }, [currentAccount, fetchBalance]);\r\n\r\n  // Get formatted balance in SUI\r\n  const getFormattedBalance = useCallback(() => {\r\n    const suiBalance = parseInt(balance) / 1_000_000_000; // Convert MIST to SUI\r\n    return suiBalance.toFixed(2);\r\n  }, [balance]);\r\n\r\n  // Check if balance is sufficient for transaction\r\n  const hasSufficientBalance = useCallback((requiredAmount) => {\r\n    const currentBalance = parseInt(balance);\r\n    const required = parseInt(requiredAmount);\r\n    return currentBalance >= required;\r\n  }, [balance]);\r\n\r\n  return {\r\n    // State\r\n    wallets,\r\n    currentWallet,\r\n    currentAccount,\r\n    isConnected,\r\n    isConnecting,\r\n    balance,\r\n    error,\r\n\r\n    // Actions\r\n    connect,\r\n    disconnect,\r\n    executeTransaction,\r\n    requestFaucetFunds,\r\n    fetchBalance,\r\n\r\n    // Utilities\r\n    getFormattedBalance,\r\n    hasSufficientBalance,\r\n    \r\n    // Client\r\n    suiClient,\r\n  };\r\n}\r\n\r\n// Debug helper function - can be called manually in browser console\r\nexport const debugWalletConnection = () => {\r\n  console.log('🔍 === WALLET DEBUG INFO ===');\r\n  console.log('Available wallets:', getWallets().get());\r\n  console.log('Local storage data:', {\r\n    connected_wallet: localStorage.getItem('connected_wallet'),\r\n    wallet_account: localStorage.getItem('wallet_account'),\r\n    walletConnected: localStorage.getItem('walletConnected'),\r\n    walletAddress: localStorage.getItem('walletAddress')\r\n  });\r\n  \r\n  const wallets = getWallets().get();\r\n  wallets.forEach(wallet => {\r\n    console.log(`Wallet ${wallet.name}:`, {\r\n      features: Object.keys(wallet.features || {}),\r\n      hasStandardConnect: !!(wallet.features && wallet.features['standard:connect']),\r\n      version: wallet.version\r\n    });\r\n  });\r\n  console.log('🔍 === END DEBUG INFO ===');\r\n};\r\n\r\n// Force clear all wallet data - can be called manually\r\nexport const forceClearWalletData = () => {\r\n  console.log('🧹 Force clearing all wallet data...');\r\n  localStorage.removeItem('connected_wallet');\r\n  localStorage.removeItem('wallet_account');\r\n  localStorage.removeItem('walletConnected');\r\n  localStorage.removeItem('walletAddress');\r\n  \r\n  // Also clear any other potential wallet-related keys\r\n  const keysToRemove = [];\r\n  for (let i = 0; i < localStorage.length; i++) {\r\n    const key = localStorage.key(i);\r\n    if (key && (key.includes('wallet') || key.includes('Wallet') || key.includes('sui') || key.includes('Sui'))) {\r\n      keysToRemove.push(key);\r\n    }\r\n  }\r\n  \r\n  keysToRemove.forEach(key => {\r\n    console.log('🧹 Removing key:', key);\r\n    localStorage.removeItem(key);\r\n  });\r\n  \r\n  window.dispatchEvent(new Event('storage'));\r\n  console.log('✅ All wallet data cleared');\r\n  window.location.reload();\r\n};\r\n\r\n// Fix corrupted wallet data (specifically empty account objects)\r\nexport const fixCorruptedWalletData = () => {\r\n  console.log('🔧 Checking for corrupted wallet data...');\r\n  const savedAccount = localStorage.getItem('wallet_account');\r\n  \r\n  if (savedAccount === '{}') {\r\n    console.log('🧹 Found corrupted account data, clearing...');\r\n    forceClearWalletData();\r\n  } else {\r\n    console.log('✅ No corrupted data found');\r\n  }\r\n};\r\n\r\n// Make debug functions available globally for manual testing\r\nif (typeof window !== 'undefined') {\r\n  window.debugWalletConnection = debugWalletConnection;\r\n  window.forceClearWalletData = forceClearWalletData;\r\n  window.fixCorruptedWalletData = fixCorruptedWalletData;\r\n}\r\n\r\n// Utility functions for smart contract interactions\r\nexport const contractUtils = {\r\n  // Convert SUI to MIST\r\n  suiToMist: (suiAmount) => {\r\n    return Math.floor(parseFloat(suiAmount) * 1_000_000_000);\r\n  },\r\n\r\n  // Convert MIST to SUI\r\n  mistToSui: (mistAmount) => {\r\n    return parseInt(mistAmount) / 1_000_000_000;\r\n  },\r\n\r\n  // Format address for display\r\n  formatAddress: (address) => {\r\n    if (!address || !isValidSuiAddress(address)) return '';\r\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\r\n  },\r\n\r\n  // Clear wallet data from localStorage\r\n  clearWalletData: () => {\r\n    localStorage.removeItem('connected_wallet');\r\n    localStorage.removeItem('wallet_account');\r\n    localStorage.removeItem('walletConnected');\r\n    localStorage.removeItem('walletAddress');\r\n    window.dispatchEvent(new Event('storage'));\r\n  },\r\n\r\n  // Generate seat ID string\r\n  generateSeatId: (row, seat) => {\r\n    return `${String.fromCharCode(64 + row)}${seat}`;\r\n  },\r\n\r\n  // Create purchase transaction\r\n  createPurchaseTransaction: (params) => {\r\n    const {\r\n      eventObjectId,\r\n      walletTrackerObjectId,\r\n      suiAmount,\r\n      seatId,\r\n      seatType,\r\n      imageUrl,\r\n      metadataUrl,\r\n      clockObjectId,\r\n      packageId\r\n    } = params;\r\n\r\n    const tx = new TransactionBlock();\r\n\r\n    // Split SUI from gas coin for payment\r\n    const [coin] = tx.splitCoins(tx.gas, [tx.pure(suiAmount)]);\r\n\r\n    // Call the purchase_ticket function\r\n    tx.moveCall({\r\n      target: `${packageId}::ticket_nft::purchase_ticket`,\r\n      arguments: [\r\n        tx.object(eventObjectId),\r\n        tx.object(walletTrackerObjectId),\r\n        coin,\r\n        tx.pure(seatId),\r\n        tx.pure(seatType),\r\n        tx.pure(imageUrl),\r\n        tx.pure(metadataUrl),\r\n        tx.object(clockObjectId),\r\n      ],\r\n    });\r\n\r\n    return tx;\r\n  }\r\n};\r\n\r\nexport default useSuiWallet; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1030, "column": 0}, "map": {"version":3,"sources":["file:///D:/printx/redmoo/pages/connect-wallet.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useSuiWallet, contractUtils } from \"../wallet/useWallet\";\r\n\r\nfunction Toast({ message, type, onClose }) {\r\n  useEffect(() => {\r\n    if (!message) return;\r\n    const timer = setTimeout(onClose, 3000);\r\n    return () => clearTimeout(timer);\r\n  }, [message, onClose]);\r\n  if (!message) return null;\r\n  return (\r\n    <div className={`fixed top-6 left-1/2 transform -translate-x-1/2 z-50 px-6 py-3 rounded shadow-lg text-white font-bold ${type === \"error\" ? \"bg-red-600\" : \"bg-green-600\"}`}>{message}</div>\r\n  );\r\n}\r\n\r\nexport default function ConnectWallet() {\r\n  const router = useRouter();\r\n  const {\r\n    wallets,\r\n    currentWallet,\r\n    isConnected,\r\n    isConnecting,\r\n    balance,\r\n    error,\r\n    connect,\r\n    requestFaucetFunds,\r\n    getFormattedBalance\r\n  } = useSuiWallet();\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedWallet, setSelectedWallet] = useState(null);\r\n  const [localError, setLocalError] = useState(\"\");\r\n  const [toast, setToast] = useState({ message: \"\", type: \"success\" });\r\n  const [requestingFaucet, setRequestingFaucet] = useState(false);\r\n  const connectBtnRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // If already connected, redirect to profile\r\n    if (isConnected) {\r\n      router.replace('/profile');\r\n    }\r\n  }, [isConnected, router]);\r\n\r\n  const handleOpenModal = () => {\r\n    setShowModal(true);\r\n    setSelectedWallet(null);\r\n    setLocalError(\"\");\r\n  };\r\n\r\n  const handleSelectWallet = (wallet) => {\r\n    setSelectedWallet(wallet);\r\n    setLocalError(\"\");\r\n  };\r\n\r\n  const handleConnect = async (e) => {\r\n    e?.preventDefault?.();\r\n    setLocalError(\"\");\r\n    \r\n    if (!selectedWallet) {\r\n      setLocalError(\"Please select a wallet.\");\r\n      return;\r\n    }\r\n\r\n    console.log('🖱️ Connect button clicked, selected wallet:', selectedWallet.name);\r\n\r\n    try {\r\n      const success = await connect(selectedWallet);\r\n      console.log('📊 Connection result:', success);\r\n      \r\n      if (success) {\r\n        setShowModal(false);\r\n        setToast({ message: `Connected to ${selectedWallet.name}`, type: \"success\" });\r\n        setTimeout(() => router.replace(\"/profile\"), 500);\r\n      } else {\r\n        // If connection failed but no error was thrown\r\n        const errorMsg = error || \"Connection failed - please try again\";\r\n        setLocalError(errorMsg);\r\n        setToast({ message: errorMsg, type: \"error\" });\r\n        console.log('❌ Connection failed silently:', errorMsg);\r\n      }\r\n    } catch (err) {\r\n      console.error('💥 Connection error caught:', err);\r\n      const errorMsg = \"Failed to connect: \" + (err?.message || err);\r\n      setLocalError(errorMsg);\r\n      setToast({ message: \"Failed to connect\", type: \"error\" });\r\n    }\r\n  };\r\n\r\n  const handleRequestFaucet = async () => {\r\n    if (!isConnected) return;\r\n    \r\n    setRequestingFaucet(true);\r\n    try {\r\n      await requestFaucetFunds();\r\n      setToast({ message: \"Faucet request sent! Funds will appear shortly.\", type: \"success\" });\r\n    } catch (err) {\r\n      setToast({ message: \"Failed to request faucet funds\", type: \"error\" });\r\n    } finally {\r\n      setRequestingFaucet(false);\r\n    }\r\n  };\r\n\r\n  // Accessibility: close modal on Escape\r\n  useEffect(() => {\r\n    if (!showModal) return;\r\n    const onKeyDown = (e) => {\r\n      if (e.key === \"Escape\") setShowModal(false);\r\n    };\r\n    window.addEventListener(\"keydown\", onKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", onKeyDown);\r\n  }, [showModal]);\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center h-full\">\r\n      <Toast message={toast.message} type={toast.type} onClose={() => setToast({ message: \"\", type: \"success\" })} />\r\n      <div className=\"bg-white p-8 rounded-lg shadow-lg text-center w-full max-w-lg\">\r\n        <h1 className=\"text-3xl font-bold text-[#A31D1D] mb-4 font-chonburi\">Connect Your Wallet</h1>\r\n        <p className=\"text-gray-700 font-domine mb-4\">\r\n          Click below to connect your Sui wallet.\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          <button\r\n            className=\"bg-[#D84040] text-white px-6 py-2 rounded-full hover:bg-[#A31D1D] transition-all duration-200 font-medium font-domine hover:scale-110 transform hover:shadow-lg\"\r\n            onClick={handleOpenModal}\r\n          >\r\n            Connect Wallet\r\n          </button>\r\n          \r\n          {/* Devnet Info Banner */}\r\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 text-sm\">\r\n            <div className=\"flex items-center mb-2\">\r\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full mr-2\"></div>\r\n              <span className=\"font-semibold text-blue-800\">Devnet Mode</span>\r\n            </div>\r\n            <p className=\"text-blue-700\">\r\n              This dApp operates on Sui Devnet. You can get free test SUI from the faucet after connecting your wallet.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        \r\n        {(error || localError) && (\r\n          <div className=\"text-red-600 mb-2 text-center\">\r\n            {error || localError}\r\n          </div>\r\n        )}\r\n        {/* Modal for wallet selection */}\r\n        {showModal && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\r\n            <div\r\n              className=\"bg-white rounded-lg p-8 max-w-md w-full mx-4 shadow-2xl relative focus:outline-none\"\r\n              tabIndex={-1}\r\n              aria-modal=\"true\"\r\n              role=\"dialog\"\r\n            >\r\n              <button\r\n                className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-700 text-2xl\"\r\n                onClick={() => setShowModal(false)}\r\n                aria-label=\"Close\"\r\n              >\r\n                ×\r\n              </button>\r\n              <h2 className=\"text-xl font-bold mb-4\">Select Wallet</h2>\r\n              <div className=\"mb-4 flex flex-col items-center\">\r\n                {wallets.length === 0 && (\r\n                  <div className=\"text-gray-500 mb-2 text-center\">\r\n                    No Sui wallets detected.<br />\r\n                    <a href=\"https://suiet.app/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-[#D84040] underline\">Install Suiet</a> or <a href=\"https://wallet.sui.io/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-[#D84040] underline\">Sui Wallet</a>\r\n                  </div>\r\n                )}\r\n                {wallets.map((wallet) => (\r\n                  <button\r\n                    key={wallet.name}\r\n                    className={`flex items-center px-4 py-2 mb-2 rounded border w-full justify-center transition-colors focus:outline-none focus:ring-2 focus:ring-[#D84040] ${\r\n                      selectedWallet?.name === wallet.name\r\n                        ? \"border-[#D84040] bg-[#F8F2DE]\"\r\n                        : \"border-gray-200\"\r\n                    }`}\r\n                    onClick={() => handleSelectWallet(wallet)}\r\n                    tabIndex={0}\r\n                    aria-pressed={selectedWallet?.name === wallet.name}\r\n                  >\r\n                    <img\r\n                      src={wallet.icon}\r\n                      alt={wallet.name}\r\n                      className=\"w-6 h-6 mr-2 rounded-full\"\r\n                    />\r\n                    <span className=\"font-domine\">{wallet.name}</span>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              <button\r\n                className=\"bg-[#D84040] text-white px-6 py-2 rounded-full hover:bg-[#A31D1D] transition-all duration-200 font-medium font-domine hover:scale-110 transform hover:shadow-lg w-full flex items-center justify-center\"\r\n                onClick={handleConnect}\r\n                disabled={!selectedWallet || isConnecting}\r\n                ref={connectBtnRef}\r\n                aria-busy={isConnecting}\r\n              >\r\n                {isConnecting && (\r\n                  <svg className=\"animate-spin h-5 w-5 mr-2 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"><circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle><path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v8z\"></path></svg>\r\n                )}\r\n                Connect\r\n              </button>\r\n              {(error || localError) && (\r\n                <div className=\"text-red-600 mt-2 text-center\">\r\n                  {error || localError}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <style jsx>{`\r\n        @media (max-width: 600px) {\r\n          .max-w-lg, .max-w-md { max-width: 98vw !important; }\r\n          .p-8 { padding: 1.5rem !important; }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1484, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/connect-wallet\";\n\n/// <reference types=\"next/client\" />\r\n\r\n// inserted by rust code\r\ndeclare const PAGE_PATH: string\r\n\r\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\r\n;(window.__NEXT_P = window.__NEXT_P || []).push([\r\n  PAGE_PATH,\r\n  () => {\r\n    return require('PAGE')\r\n  },\r\n])\r\n// @ts-expect-error module.hot exists\r\nif (module.hot) {\r\n  // @ts-expect-error module.hot exists\r\n  module.hot.dispose(function () {\r\n    window.__NEXT_P.push([PAGE_PATH])\r\n  })\r\n}\r\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}}]
}